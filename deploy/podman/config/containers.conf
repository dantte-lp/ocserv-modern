# Podman containers.conf - Container runtime configuration
# Optimized for wolfguard development with crun and rootless containers
#
# Installation:
#   User-level:  cp config/containers.conf ~/.config/containers/containers.conf
#   System-level: sudo cp config/containers.conf /etc/containers/containers.conf
#
# Documentation: man containers.conf

[containers]

# Default user namespace mode
# - auto: Automatically detect rootless mode
# - host: Use host user namespace (requires root)
# - private: Use private user namespace (rootless default)
userns = "auto"

# Network backend to use
# - cni: Container Network Interface (default)
# - netavark: Modern network stack (recommended for Podman 4+)
network_backend = "netavark"

# Default DNS servers for containers
dns_servers = [
    "8.8.8.8",
    "8.8.4.4",
    "1.1.1.1"
]

# Default search domains for DNS resolution
dns_searches = [
    "localdomain"
]

# Default capabilities
# Drop all capabilities by default for security
default_capabilities = [
    "CHOWN",
    "DAC_OVERRIDE",
    "FOWNER",
    "FSETID",
    "KILL",
    "NET_BIND_SERVICE",
    "SETFCAP",
    "SETGID",
    "SETPCAP",
    "SETUID",
]

# Environment variables to pass into containers
env = [
    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
]

# Default ulimits
default_ulimits = [
    "nofile=65536:65536",
    "nproc=4096:4096",
]

# Container init process
# Use catatonit for proper signal handling and zombie reaping
init = true
init_path = "/usr/libexec/podman/catatonit"

# Enable container labels
label = true

# Log driver for container logging
# - k8s-file: Kubernetes-compatible JSON logging (default)
# - journald: systemd journal
# - json-file: Docker-compatible JSON
log_driver = "k8s-file"

# Maximum log size before rotation
log_size_max = 10485760  # 10 MB

# Enable seccomp security profiles
seccomp_profile = "/usr/share/containers/seccomp.json"

# SELinux process label
# Leave empty for default container_t
# selinux_label = "system_u:system_r:container_t:s0"

# Enable read-only /proc filesystem
# read_only_proc = true

# Enable read-only /sys filesystem
# read_only_sys = true

# Default tmpfs size
tmpfs_size = "65536k"

# Enable cgroup management
cgroup_manager = "systemd"

# Enable container stats collection
events_logger = "journald"

# PID namespace mode
# - private: Each container gets its own PID namespace (default)
# - host: Share host PID namespace
pidns = "private"

# IPC namespace mode
ipc = "private"

# UTS namespace mode (hostname)
utsns = "private"

[engine]

# Container runtime to use (crun is faster than runc)
runtime = "crun"

# Path to crun binary
[engine.runtimes]
crun = [
    "/usr/bin/crun",
    "/usr/local/bin/crun",
]

# Alternative runtimes (if needed)
runc = [
    "/usr/bin/runc",
]

# Runtime supports JSON format
runtime_supports_json = ["crun", "runc"]

# Runtime supports KVM (not applicable for crun/runc)
runtime_supports_kvm = []

# Runtime supports no-pivot
runtime_supports_nocgroups = ["crun"]

# Number of locks for parallel operations
num_locks = 2048

# Active service (not used in rootless mode)
# active_service = ""

# Enable cgroup V2 delegation
# Improves performance with systemd and cgroup v2
cgroup_manager = "systemd"

# Image parallel downloads
# Number of parallel pulls
image_parallel_copies = 5

# Enable image volume copy-up
# volume_copy_up = true

# Events logging
events_logger = "journald"

# Infra container image for pods
# This image provides the shared network namespace in pods
infra_image = "registry.access.redhat.com/ubi9/ubi-micro:latest"

# Infra container command
infra_command = "/catatonit"

# Network command for network setup
# network_cmd_path = "/usr/libexec/cni"

# Enable pod creation
# pod_exit_policy = "continue"

# Pull policy
# - always: Always pull the image
# - missing: Pull if not present (default)
# - never: Never pull, fail if not present
pull_policy = "missing"

# Stop timeout (seconds)
# Time to wait for container to stop before killing
stop_timeout = 10

# Enable remote connections
# remote = false

# Container engine environment
env = [
    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
]

[network]

# Default network name
default_network = "podman"

# Default subnet for networks
default_subnet = "10.88.0.0/16"

# Default subnet pool for networks
# default_subnet_pools = [
#     {"base": "10.89.0.0/16", "size": 24},
# ]

# DNS bind port for netavark
# dns_bind_port = 53

# Network config directory
network_config_dir = "/etc/cni/net.d/"

# CNI plugin directories
cni_plugin_dirs = [
    "/usr/libexec/cni",
    "/usr/lib/cni",
    "/opt/cni/bin",
]

[secrets]

# Secrets driver
driver = "file"

[machine]

# Machine provider (for Podman Machine on macOS/Windows)
# Not applicable for Linux
# provider = ""

[farms]

# Container farms configuration
# Not typically used for development
# default = ""
