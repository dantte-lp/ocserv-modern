# Podman storage.conf - Container storage configuration
# Defines storage drivers, options, and paths for container images and layers
#
# Installation:
#   User-level:  cp config/storage.conf ~/.config/containers/storage.conf
#   System-level: sudo cp config/storage.conf /etc/containers/storage.conf
#
# Documentation: man containers-storage.conf

[storage]

# Storage driver to use
# - overlay: Fast, modern, copy-on-write filesystem (recommended)
# - vfs: Simple directory-based storage (slow, for testing)
# - zfs: ZFS-based storage (if ZFS is available)
# - btrfs: Btrfs-based storage (if Btrfs is available)
driver = "overlay"

# Root directory for storage
# System-level: /var/lib/containers/storage
# User-level: $HOME/.local/share/containers/storage
runroot = "/run/containers/storage"

# Graph root - where container images and layers are stored
# System-level: /var/lib/containers/storage
# User-level: $HOME/.local/share/containers/storage
# graphroot = "/var/lib/containers/storage"  # Set automatically based on user

# Storage options for overlay driver
[storage.options]

# Enable pull-through cache for image layers
# Improves performance by caching pulled layers
pull_options = {enable_partial_images = "true"}

# Overlay storage options
[storage.options.overlay]

# Mount program to use for overlay mounts
# - fuse-overlayfs: Userspace overlay for rootless containers (default for rootless)
# - "": Use kernel overlayfs (requires root or user namespaces)
mount_program = "/usr/bin/fuse-overlayfs"

# Automatically use kernel overlayfs if available (rootful mode)
# mountopt = "nodev"

# Size of overlay filesystem
# Limits the total size of all container storage
# size = "10G"

# Inode limit for overlay storage
# inodes = "1000000"

# Skip mount home
# Improves security by preventing access to home directory
skip_mount_home = "false"

# Ignore chown errors
# Useful in rootless mode where chown may not be possible
ignore_chown_errors = "true"

# Force mask for directories
# Ensures directories have correct permissions in rootless mode
# force_mask = "0000"

# Use composefs for improved performance
# Requires composefs support in kernel
# use_composefs = "false"

# Overlay redirect_dir option
# Improves performance for certain workloads
# mountopt = "redirect_dir=on"

# Additional overlay mount options
# Example: enable metacopy for better performance
# mountopt = "metacopy=on"

# Storage options for other drivers

# VFS driver options (simple directory-based storage)
# Only use for testing - very slow!
[storage.options.vfs]
# ignore_chown_errors = "true"

# ZFS driver options
# [storage.options.zfs]
# fsname = "tank/containers"
# mountopt = "nodev"

# Btrfs driver options
# [storage.options.btrfs]
# min_space = "10G"
# size = "100G"

# Image storage options
[storage.options.image]

# Image signing enforcement
# - reject: Reject unsigned images
# - warn: Warn about unsigned images
# - accept: Accept unsigned images (default)
# signing-policy = "accept"

# Layer squashing options
# Automatically squash layers when pulling images
# squash = false

# Additional options

# Auto user namespace options
[storage.options.autonsoptions]

# Additional UIDs for user namespace mapping
# Allows mapping more UIDs in rootless mode
# additionaluidmappings = ["1000:1001:65536"]
# additionalgidmappings = ["1000:1001:65536"]

# Thin pool options (for devicemapper, mostly obsolete)
# [storage.options.thinpool]
# autoextend_percent = "20"
# autoextend_threshold = "80"
# basesize = "10G"
# blocksize = "64k"
# directlvm_device = ""
# fs = "xfs"
# log_level = "7"
# min_free_space = "10%"
# mkfsarg = ""
# use_deferred_removal = "true"
# use_deferred_deletion = "true"
# xfs_nospace_max_retries = "0"
